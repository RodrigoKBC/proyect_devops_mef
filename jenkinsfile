// Archivo: Jenkinsfile
pipeline {
    agent any
    
    environment {
        APP_NAME = 'sistema-mef'
        VERSION = "${BUILD_NUMBER}"
    }
    
    stages {
        stage('üöÄ Preparaci√≥n') {
            steps {
                echo "Iniciando Pipeline DevOps MEF"
                echo "Build n√∫mero: ${BUILD_NUMBER}"
                echo "Aplicaci√≥n: ${APP_NAME}"
            }
        }
        
        stage('üîç An√°lisis de C√≥digo') {
            parallel {
                stage('Linting') {
                    steps {
                        echo "Ejecutando an√°lisis est√°tico..."
                        sh '''
                            echo "‚úì Verificando est√°ndares de c√≥digo"
                            sleep 2
                            echo "‚úì No se encontraron problemas"
                        '''
                    }
                }
                
                stage('Seguridad') {
                    steps {
                        echo "An√°lisis de vulnerabilidades..."
                        sh '''
                            echo "‚úì Escaneando dependencias"
                            sleep 2
                            echo "‚úì Sin vulnerabilidades cr√≠ticas"
                        '''
                    }
                }
            }
        }
        
        stage('üî® Build') {
            steps {
                echo "Construyendo aplicaci√≥n..."
                sh '''
                    echo "Compilando c√≥digo..."
                    echo "Generando artefactos..."
                    sleep 3
                    echo "‚úÖ Build exitoso"
                '''
            }
        }
        
        stage('üß™ Tests') {
            steps {
                echo "Ejecutando suite de pruebas..."
                sh '''
                    echo "Tests unitarios: 45/45 ‚úì"
                    echo "Tests integraci√≥n: 12/12 ‚úì"
                    echo "Coverage: 85%"
                '''
            }
        }
        
        stage('üê≥ Docker Build') {
            steps {
                echo "Construyendo imagen Docker..."
                sh '''
                    echo "docker build -t ${APP_NAME}:${VERSION} ."
                    echo "‚úÖ Imagen creada: ${APP_NAME}:${VERSION}"
                '''
            }
        }
        
        stage('üì¶ Deploy') {
            when {
                branch 'main'
            }
            steps {
                echo "Desplegando a producci√≥n..."
                sh '''
                    echo "Aplicando configuraci√≥n Kubernetes..."
                    echo "kubectl apply -f k8s/"
                    echo "‚úÖ Deployment exitoso"
                '''
            }
        }
    }
    
    post {
        always {
            echo "========================================="
            echo "Pipeline completado"
            echo "========================================="
        }
        success {
            echo "‚úÖ Pipeline ejecutado exitosamente!"
        }
        failure {
            echo "‚ùå El pipeline fall√≥. Revisar logs."
        }
    }
}